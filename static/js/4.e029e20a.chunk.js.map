{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog","src","item","to","id","activeClassName","active","name","Message","mava","message","text","maxLength","maxLengthCreator","AddMessageForm","clearfix","onSubmit","handleSubmit","type","clip","Field","component","validate","required","textar","placeholder","forward","reduxForm","form","Dialogs","dialogsElements","DialogsPage","dialogs","map","d","key","messagesElements","messages","m","dialogsItems","vl","footer","values","addNewMessage","newMessageBody","mapStateToPropsForRedirect","state","isAuth","auth","DialogsContainer","compose","connect","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,GAAK,oBAAoB,KAAO,sBAAsB,KAAO,sBAAsB,OAAS,wBAAwB,SAAW,0BAA0B,OAAS,wBAAwB,QAAU,yBAAyB,KAAO,wB,uGCYjcC,EAPI,SAACC,GAChB,OAAO,yBAAKC,UAAWC,IAAEC,QACrB,yBAAKC,IAAI,gEAAgEH,UAAWC,IAAEG,OACtF,kBAAC,IAAD,CAASC,GAAI,WAAaN,EAAMO,GAAIC,gBAAiBN,IAAEO,QAAST,EAAMU,QCM/DC,EAXC,SAACX,GACb,OACI,yBAAKC,UAAWC,IAAEU,MACd,yBAAKX,UAAWC,IAAEG,KACbD,IAAI,mGAET,yBAAKH,UAAWC,IAAEW,SAAUb,EAAMc,Q,iCCgCxCC,EAAYC,YAAiB,IAE/BC,EAAiB,SAACjB,GAClB,OACI,0BAAMC,UAAWC,IAAEgB,SAAUC,SAAUnB,EAAMoB,cACzC,4BAAQC,KAAK,SAASpB,UAAWC,IAAEoB,MAAnC,gBACA,6BACI,kBAACC,EAAA,EAAD,CAAQC,UAAU,WAAWC,SAAU,CAACC,IAAUX,GAAYd,UAAWC,IAAEyB,OAASjB,KAAK,iBAAiBkB,YAAY,wBAG1H,4BAAQP,KAAK,SAAUpB,UAAWC,IAAE2B,SAApC,YAKZZ,EAAiBa,YAAU,CAACC,KAAM,wBAAjBD,CAA0Cb,GAE5Ce,MAjDC,SAAChC,GAEb,IAAIiC,EAAkBjC,EAAMkC,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAY3B,KAAM2B,EAAE3B,KAAM4B,IAAKD,EAAE9B,GAAIA,GAAI8B,EAAE9B,QAEhGgC,EAAmBvC,EAAMkC,YAAYM,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAAS3B,KAAM2B,EAAE5B,QAASyB,IAAKG,EAAElC,QAO5F,OACI,yBAAKN,UAAWC,IAAEiC,SACd,yBAAKlC,UAAWC,IAAEwC,cACbT,GAGL,yBAAKhC,UAAWC,IAAEyC,KAElB,yBAAK1C,UAAWC,IAAEsC,UACbD,GAIL,4BAAQtC,UAAWC,IAAE0C,QACjB,kBAAC,EAAD,CAAgBzB,SAlBR,SAAC0B,GACjB7C,EAAM8C,cAAcD,EAAOE,sB,wCCd/BC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,S,OCgBjBE,EAAmBC,YACrBC,aAdkB,SAACL,GACnB,MAAO,CACHf,YAAae,EAAMf,gBAIF,SAACqB,GACtB,MAAM,CACFT,cAAgB,SAACC,GACbQ,EAASC,YAAwBT,UDRb,SAACU,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAK3D,MAAMkD,OAET,kBAACO,EAAcE,KAAK3D,OAFK,kBAAC,IAAD,CAAUM,GAAI,eAHX,GACXsD,IAAMH,WAStC,OAFqCH,YAAQN,EAARM,CAAoCI,KCIpDL,CAGvBrB,GAEaoB","file":"static/js/4.e029e20a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\",\"vl\":\"Dialogs_vl__3MUnu\",\"item\":\"Dialogs_item__29pPd\",\"mava\":\"Dialogs_mava__2bay9\",\"footer\":\"Dialogs_footer__3e4A6\",\"clearfix\":\"Dialogs_clearfix__1dSJN\",\"textar\":\"Dialogs_textar__34Zk1\",\"forward\":\"Dialogs_forward__2zuux\",\"clip\":\"Dialogs_clip__3tm_-\"};","import React from \"react\";\nimport s from \"./../Dialogs.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\n\n\nconst DialogItem = (props) => {\n    return <div className={s.dialog}>\n        <img src=\"https://rezoleg.ru/images/avatar/1_ULYowpbnr0VtDEqJ6P7tfQ.png\" className={s.item}/>\n        <NavLink to={\"/dialog/\" + props.id} activeClassName={s.active}>{props.name}</NavLink>\n    </div>\n}\n\nexport default DialogItem","import React from \"react\";\nimport s from \"./../Dialogs.module.css\";\n\n\nconst Message = (props) => {\n    return (\n        <div className={s.mava}>\n            <img className={s.item}\n                 src=\"https://f0.pngfuel.com/png/701/23/black-and-brown-gorilla-vector-illustration-png-clip-art.png\"/>\n\n            <div className={s.message}>{props.text}</div>\n        </div>\n    )\n}\n\nexport default Message","import React from \"react\";\nimport s from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\n\n\n\nconst Dialogs = (props) => {\n\n    let dialogsElements = props.DialogsPage.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>)\n\n    let messagesElements = props.DialogsPage.messages.map(m => <Message text={m.message} key={m.id}/>)\n\n\n    let addNewMessage = (values) => {\n        props.addNewMessage(values.newMessageBody)\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n\n            <div className={s.vl}></div>\n\n            <div className={s.messages}>\n                {messagesElements}\n\n\n            </div>\n            <footer className={s.footer}>\n                <AddMessageForm onSubmit={addNewMessage}/>\n            </footer>\n\n        </div>\n    )\n}\n\nconst maxLength = maxLengthCreator(30)\n\nlet AddMessageForm = (props) => {\n    return(\n        <form className={s.clearfix} onSubmit={props.handleSubmit}>\n            <button type=\"submit\" className={s.clip}>&#128206;</button>\n            <div >\n                <Field  component=\"Textarea\" validate={[required, maxLength]} className={s.textar}  name=\"newMessageBody\" placeholder=\"Enter your message\"/>\n            </div>\n\n            <button type=\"submit\"  className={s.forward}>&#8594;</button>\n        </form>\n    )\n}\n\nAddMessageForm = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\n\nexport default Dialogs","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth ) return <Redirect to={\"/login\"}/>;\n\n            return <Component {...this.props}/>\n        }\n    }\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent;\n}\n\n","import React from \"react\";\nimport {addMessageActionCreator,} from \"../../redux/dialogs_reducer\";\nimport {connect} from \"react-redux\";\nimport Dialogs from \"./Dialogs\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        DialogsPage: state.DialogsPage,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return{\n        addNewMessage : (newMessageBody) => {\n            dispatch(addMessageActionCreator(newMessageBody))\n        }\n    }\n}\nconst DialogsContainer = compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs)\n\nexport default DialogsContainer\n"],"sourceRoot":""}