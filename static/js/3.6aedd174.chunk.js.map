{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","autoFocus","status_inp","onBlur","updateUserStatus","onChange","e","currentTarget","value","onDoubleClick","ProfileInfo","profile","wrapper","ava","src","photos","large","description","fullName","about","aboutMe","job","lookingForAJob","jobphoto","lookingForAJobDescription","contacts","target","href","facebook","website","vk","twitter","instagram","youtube","github","mainLink","Preloader","Post","item","message","like","likeActive","likesCount","maxLength","maxLengthCreator","AddNewPostForm","onSubmit","handleSubmit","Field","textar","name","component","Textarea","validate","required","type","reduxForm","form","MyPosts","React","memo","postsElements","posts","map","p","values","addPosts","newPostText","MyPostsContainer","connect","state","ProfilePage","dispatch","addPostActionCreator","Profile","bodydiv","width","store","ProfileContainer","userId","this","match","params","id","history","push","getUserProfile","getUserStatus","Component","compose","isAuth","auth","withRouter"],"mappings":"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","file":"static/js/3.6aedd174.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProfileInfo_wrapper__3boPV\",\"ava\":\"ProfileInfo_ava__K96Gt\",\"description\":\"ProfileInfo_description__2yWda\",\"job\":\"ProfileInfo_job__2-Eu2\",\"jobphoto\":\"ProfileInfo_jobphoto__ATclK\",\"status\":\"ProfileInfo_status__2G3BZ\",\"contacts\":\"ProfileInfo_contacts__3y62P\",\"status_inp\":\"ProfileInfo_status_inp__2pfkF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bodydiv\":\"Profile_bodydiv__jxn7t\",\"item\":\"Profile_item__Kyaaw\",\"profile\":\"Profile_profile__3dzvr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textar\":\"MyPosts_textar__2OFun\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"like\":\"Post_like__oViQh\",\"likeActive\":\"Post_likeActive__2KtyL\"};","import React, {useEffect, useState} from \"react\";\nimport s from \"./ProfileInfo.module.css\";\n\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false)\n    let [status, setStatus] = useState(props.status)\n\n\n    useEffect( () => {\n        setStatus(props.status)\n    }, [props.status])\n\n    const activatedMode = () => {\n        setEditMode(true)\n    }\n\n    const deactivatedMode = () => {\n        setEditMode(false)\n        props.updateUserStatus(status)\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    return (\n        <div className={s.status}>\n            {!editMode ?\n                <div onDoubleClick={activatedMode}>\n                    <span>Status : {!props.status ? \"нет статуса\" : props.status}</span>\n                </div>\n                : <div>\n                    <input autoFocus={true}\n                           className={s.status_inp}\n                           onBlur={deactivatedMode}\n                           onChange={onStatusChange}\n                           value={status}/>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ProfileStatusWithHooks","import s from \"./ProfileInfo.module.css\";\nimport React from \"react\";\nimport Preloader from \"../../../common/prelooader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nconst ProfileInfo = (props) => {\n    if (!props.profile) {\n        return <Preloader/>\n    }\n\n    return (\n        <div className={s.wrapper}>\n            <div>\n                <img className={s.ava}\n                     src={!props.profile.photos.large ? \"https://s3.amazonaws.com/37assets/svn/765-default-avatar.png\" : props.profile.photos.large}/>\n                <ProfileStatusWithHooks status={props.status} updateUserStatus={props.updateUserStatus}/>\n            </div>\n            <div className={s.description}>\n                <h2>{props.profile.fullName}</h2>\n                <p className={s.about}>{props.profile.aboutMe}</p>\n                <div className={s.job}> {props.profile.lookingForAJob ?\n                    <img className={s.jobphoto} src=\"https://klike.net/uploads/posts/2018-07/1532779450_5.jpg\"/> :\n                    <img className={s.jobphoto} src=\"https://welcome-to-canada.org/wp-content/uploads/2017/07/%D0%A0%D0%B0%D0%B1%D0%BE%D1%82%D0%B0-%D0%B2-%D0%9A%D0%B0%D0%BD%D0%B0%D0%B4%D0%B5-300x200.jpg\"/>}\n                    {props.profile.lookingForAJobDescription}\n                </div>\n                <div className={s.contacts}>\n                    Facebook : <a target=\"_blank\" href={props.profile.contacts.facebook}>{!props.profile.contacts.facebook ? \"нету\" : props.profile.contacts.facebook}<br/></a>\n                    website : <a target=\"_blank\" href={props.profile.contacts.website}>{!props.profile.contacts.website ? \"нету\" : props.profile.contacts.website} <br/></a>\n                    vk : <a target=\"_blank\" href={props.profile.contacts.vk}>{!props.profile.contacts.vk ? \"нету\" : props.profile.contacts.vk}<br/></a>\n                    twitter : <a  target=\"_blank\" href={props.profile.contacts.twitter}>{!props.profile.contacts.twitter ? \"нету\" : props.profile.contacts.twitter}<br/></a>\n                    instagram : <a target=\"_blank\" href={props.profile.contacts.instagram}>{!props.profile.contacts.instagram ? \"нету\" : props.profile.contacts.instagram}<br/></a>\n                    youtube : <a target=\"_blank\" href={props.profile.contacts.youtube}>{!props.profile.contacts.youtube ? \"нету\" : props.profile.contacts.youtube}<br/></a>\n                    github : <a target=\"_blank\"href={props.profile.contacts.github}>{!props.profile.contacts.github ? \"нету\" : props.profile.contacts.github}<br/></a>\n                    mainLink : <a target=\"_blank\" href={props.profile.contacts.mainLink}>{!props.profile.contacts.mainLink ? \"нету\" : props.profile.contacts.mainLink}<br/></a>\n\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default ProfileInfo","import s from \"./Post.module.css\";\nimport React from \"react\";\n\nconst Post = (props) => {\n    return (\n        <div className={s.item}>\n            <img src=\"https://i.stack.imgur.com/rRslI.png?s=328&g=1\"/>\n            {props.message}\n\n            <div className={s.like}>\n                <button className={s.likeActive}> ♥</button>\n                {props.likesCount}\n            </div>\n\n        </div>)\n}\n\nexport default Post","import s from \"./MyPosts.module.css\";\nimport React from \"react\";\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\n\nconst maxLength = maxLengthCreator(10)\n\nlet AddNewPostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field className={s.textar} name=\"newPostText\"\n                   component={Textarea} validate={[required, maxLength]}/> <br/>\n            <button type=\"submit\">Add Post</button>\n        </form>\n    )\n}\n\nAddNewPostForm = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\n\n\nlet MyPosts = React.memo(props => {\n    let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>)\n\n\n    let onAddPosts = (values) => {\n        props.addPosts(values.newPostText)\n    }\n\n    return <div>\n        My posts\n        <AddNewPostForm onSubmit={onAddPosts}/>\n        <div>\n            {postsElements}\n        </div>\n    </div>\n})\n\n\nexport default MyPosts","import React from \"react\";\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile_reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.ProfilePage.posts\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return{\n        addPosts : (newPostText) => {\n            dispatch(addPostActionCreator(newPostText))\n        }\n    }\n}\n\n\nconst MyPostsContainer = connect (mapStateToProps,mapDispatchToProps) (MyPosts);\n\nexport default MyPostsContainer","import React from \"react\";\nimport s from \"./Profile.module.css\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\n\n\n\n\n\nconst Profile = (props) => {\n    return (\n        <div className={s.bodydiv}>\n            <div>\n                <img width=\"100%\" className={s.item}\n                     src=\"https://images.unsplash.com/photo-1509225770129-fbcf8a696c0b?ixlib=rb-1.2.1&auto=format&fit=crop&w=1959&q=80\"/>\n            </div>\n            <div className={s.profile}>\n\n                <ProfileInfo profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus}/>\n\n                <MyPostsContainer store={props.store} />\n            </div>\n        </div>\n    )\n}\n\nexport default Profile","import React from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {\n    getUserProfile,\n    getUserStatus,\n    updateUserStatus\n} from \"../../redux/profile_reducer\";\nimport {compose} from \"redux\";\nimport {withRouter} from \"react-router-dom\";\n\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = this.props.id\n            if (!userId) {\n                this.props.history.push(\"/login\")\n            }\n        }\n\n        this.props.getUserProfile(userId)\n        this.props.getUserStatus(userId)\n    }\n\n    render() {\n        return (\n            <div>\n                <Profile {...this.props}\n                         profile={this.props.profile}\n                         status={this.props.status}\n                         updateUserStatus={this.props.updateUserStatus}/>\n            </div>\n        )\n    }\n}\n\n\nlet mapStateToProps = (state) => ({\n    status: state.ProfilePage.status,\n    profile: state.ProfilePage.profile,\n    isAuth: state.auth.isAuth,\n    id: state.auth.id\n})\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}),\n    withRouter,\n    //withAuthRedirect\n)(ProfileContainer)"],"sourceRoot":""}