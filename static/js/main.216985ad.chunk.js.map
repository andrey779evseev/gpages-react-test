{"version":3,"sources":["redux/dialogs_reducer.js","api/api.js","assets/images/ava.jpg","assets/images/Spinner.svg","common/prelooader/Preloader.module.css","components/Users/Users.module.css","components/Navbar/Navbar.module.css","components/Login/Login.module.css","serviceWorker.js","redux/sidebar_reducer.js","utils/object-helpers.js","redux/users_reducer.js","redux/app_reducer.js","redux/auth_reducer.js","redux/redux_store.js","components/Navbar/Navbar.jsx","common/Paginator/Paginator.js","components/Users/User.js","components/Users/Users.js","redux/users_selectors.js","components/Users/UsersContainer.jsx","components/Login/Login.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","App.js","index.js","components/Header/Header.module.css","common/Paginator/Paginator.module.css","common/prelooader/Preloader.js","common/FormsControls/FormsControls.js","utils/validators/validators.js","common/FormsControls/FormsControls.module.css","redux/profile_reducer.js"],"names":["initialState","dialogs","id","name","messages","message","addMessageActionCreator","newMessageBody","type","dialogsReducer","state","action","instance","axios","withCredentials","headers","baseURL","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","profileAPI","getUserProfile","getUserStatus","updateUserStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","module","exports","Boolean","window","location","hostname","match","sidebarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","followed","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","toggleIsFetching","toggleFollowingInProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","count","filter","initialized","appReducer","SET_USER_DATA","isAuth","setAuthUserData","payload","authentication","authReducer","reducers","combineReducers","ProfilePage","profileReducer","DialogsPage","Sidebar","UsersPage","auth","app","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Navbar","props","className","s","nav","item","to","activeClassName","active","Paginator","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","dis","numPage","onClick","disabled","p","selectedborderdiv","borderdiv","selectedPage","nonselectedpage","e","onPageChanged","User","user","flex_wrapper","avafoll","alt","ava","src","photos","small","userPhotos","btn","some","description","Users","block","key","usersGet","createSelector","pageSizeGet","totalUsersCountGet","currentPageGet","isFetchingGet","followingInProgressGet","toggleFollowingInProgressGet","UsersContainer","pageNumber","setCurrentPage","this","Preloader","React","Component","connect","bind","totalCount","maxLength","maxLengthCreator","LoginReduxForm","reduxForm","handleSubmit","error","wrapper","mini_wrapper","onSubmit","createField","inptxt","Input","required","diver","Field","checkbox","component","htmlFor","err","log","length","stopSubmit","_error","body","formData","Header","header","logo","loginBlock","quit","HeaderContainer","ProfileContainer","lazy","DialogsContainer","App","initializeApp","fallback","path","render","AppContainer","withRouter","prom","Promise","all","SamuraiJSApp","basename","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","Spinner","preloader","FormControl","children","meta","touched","hasError","Textarea","input","placeholder","validators","validate","value","posts","likesCount","profile","addPostActionCreator","newPostText","setUsersStatus","postId"],"mappings":"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","file":"static/js/main.216985ad.chunk.js","sourcesContent":["const ADD_MESSAGE = 'ADD-MESSAGE';\n\nlet initialState = {\n        dialogs: [\n            {id: 1, name: 'Andrew'},\n            {id: 2, name: 'Mark'},\n            {id: 3, name: 'Victor'},\n            {id: 4, name: 'Vasia'},\n            {id: 5, name: 'Sasha'},\n            {id: 6, name: 'Petya'},\n        ],\n        messages: [\n            {id: 1, message: 'Hi'},\n            {id: 2, message: 'My name is Andrew'},\n            {id: 3, message: 'Hi, me name is Vasia'},\n            {id: 4, message: 'Yes'},\n            {id: 5, message: 'No'},\n            {id: 6, message: 'My friend'},\n            {id: 7, message: 'Yes'},\n            {id: 8, message: 'Yo'},\n        ],\n}\n\nconst dialogsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_MESSAGE: {\n            let newMessageBody = action.newMessageBody\n            return  {\n                ...state,\n                messages: [{id: 9, message: newMessageBody}, ...state.messages],\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n\n\n\nexport const addMessageActionCreator = (newMessageBody) => ({type:ADD_MESSAGE, newMessageBody})\n\n\n\n\nexport default dialogsReducer;","import * as axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    headers : {\n        \"API-KEY\" : \"91cf8020-06af-48f1-9986-c7ac90bd7f5a\"\n    },\n    baseURL : \"https://social-network.samuraijs.com/api/1.0/\"\n})\n\nexport  const usersAPI = {\n    getUsers (currentPage, pageSize) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`\n        ).then(response => response.data)\n    },\n    follow (userId) {\n        return instance.post(`follow/${userId}`).then(response => response.data)\n    },\n    unfollow (userId) {\n        return instance.delete(`follow/${userId}`).then(response => response.data)\n    },\n}\n\nexport const profileAPI = {\n    getUserProfile (userId) {\n        return instance.get(`profile/` + userId).then(response => response.data)\n    },\n    getUserStatus (userId) {\n        return instance.get(`profile/status/` + userId).then(response => response.data)\n    },\n    updateUserStatus (status) {\n        return instance.put(`profile/status`, {status: status}).then(response => response.data)\n    }\n}\n\nexport  const authAPI = {\n    me () {\n        return instance.get(`auth/me`).then(response => response.data)\n    },\n    login (email, password,rememberMe = false) {\n        return instance.post(`auth/login`, {email, password,rememberMe}).then(response => response.data)\n    },\n    logout () {\n        return instance.delete(`auth/login`).then(response => response.data)\n    }\n}","module.exports = __webpack_public_path__ + \"static/media/ava.0aa8581c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Spinner.36376a0c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3Tcwk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Users_block__1re8X\",\"flex_wrapper\":\"Users_flex_wrapper__1I_uT\",\"ava\":\"Users_ava__dN1VK\",\"description\":\"Users_description__QFQc5\",\"location\":\"Users_location__1IQvC\",\"btn\":\"Users_btn__9AIH5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"active\":\"Navbar_active__3mbhk\",\"friendName\":\"Navbar_friendName__1X5-q\",\"friendAva\":\"Navbar_friendAva__dSi8T\",\"friendsInfo\":\"Navbar_friendsInfo__1JoZO\",\"wordFriends\":\"Navbar_wordFriends__8DmoI\",\"friendsBlock\":\"Navbar_friendsBlock__1gp2e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Login_body__1nu5X\",\"wrapper\":\"Login_wrapper__1IflB\",\"mini_wrapper\":\"Login_mini_wrapper__2Jpps\",\"checkbox\":\"Login_checkbox__3UFrU\",\"diver\":\"Login_diver__cCkjp\",\"btn\":\"Login_btn__172Gj\",\"log\":\"Login_log__2UIkd\",\"err\":\"Login_err__lkDWe\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {}\n\nconst sidebarReducer = (state = initialState, action) => {\n\n    return state;\n}\n\nexport default sidebarReducer;","\n\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\n    return items.map(u => {\n        if (u[objPropName] === itemId)\n            return {...u, followed : newObjProps}\n        return u;\n    })\n}\n","import {usersAPI} from \"../api/api\";\nimport {updateObjectInArray} from \"../utils/object-helpers\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRES = 'TOGGLE_IS_FOLLOWING_PROGRES';\n\nlet initialState = {\n    users: [],\n    pageSize: 5,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: []\n\n}\n\nconst usersReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", true)\n            }\n\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", false)\n            }\n\n        case SET_USERS: {\n            return {...state, users: action.users}\n        }\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return {...state, totalUsersCount: action.count}\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRES: {\n            return {\n                ...state,\n                followingInProgress: action.followingInProgress\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id !== action.userId)\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\n\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\n\nexport const setUsers = (users) => ({type: SET_USERS, users})\n\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\n\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\n\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\n\nexport const toggleFollowingInProgress = (followingInProgress, userId) => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRES,\n    followingInProgress,\n    userId\n})\n\n\nexport const getUsers = (currentPage, pageSize) => async (dispatch) => {\n    dispatch(toggleIsFetching(true));\n    let data = await usersAPI.getUsers(currentPage, pageSize)\n    dispatch(toggleIsFetching(false))\n    dispatch(setUsers(data.items))\n    dispatch(setTotalUsersCount(data.totalCount))\n}\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingInProgress(true, userId))\n    let data = await apiMethod(userId)\n    if (data.resultCode === 0) {\n        dispatch(actionCreator(userId))\n    }\n    dispatch(toggleFollowingInProgress(false, userId))\n}\n\nexport const follow = (userId) => async (dispatch) => {\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\n}\n\nexport const unfollow = (userId) => async (dispatch) => {\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\n}\n\n\nexport default usersReducer;","import {authentication} from \"./auth_reducer\";\n\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\n\nlet initialState = {\n    initialized: false,\n}\n\nconst appReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n        default:\n            return state;\n    }\n}\n\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () => (dispatch) => {\n    let prom = dispatch(authentication());\n\n    Promise.all([prom])\n        .then(() => {\n            dispatch(initializedSuccess());\n        });\n}\n\n/*export const initializeApp = () => async (dispatch) => {\n    await dispatch(authentication());\n    dispatch(initializedSuccess());\n};*/\n\nexport default appReducer","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {initializedSuccess} from \"./app_reducer\";\n\nconst SET_USER_DATA = 'malifor-network/auth/SET_USER_DATA';\n\n\nlet initialState = {\n    id: null,\n    email: null,\n    login: null,\n    isFetching: false,\n    isAuth: false\n}\n\nconst authReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload,\n            }\n        default:\n            return state;\n    }\n}\n\n\nexport const setAuthUserData = (id, email, login, isAuth) => ({\n    type: SET_USER_DATA, payload: {\n        id,\n        email,\n        login,\n        isAuth,\n    }\n})\n\n\nexport const authentication = () => async (dispatch) => {\n    let data = await authAPI.me()\n    if (data.resultCode === 0) {\n        let {id, email, login} = data.data\n        dispatch(setAuthUserData(id, email, login, true))\n    }\n}\n\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n    let data = await authAPI.login(email, password, rememberMe);\n    if (data.resultCode === 0) {\n        dispatch(authentication())\n    } else {\n        let message = data.messages.length > 0 ? data.messages[0] : \"Some Error\"\n        dispatch(stopSubmit(\"login\", {_error: message}))\n    }\n}\n\nexport const logout = () => async (dispatch) => {\n    let data = await authAPI.logout()\n    if (data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false))\n    }\n}\n\nexport default authReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport profileReducer from \"./profile_reducer\";\nimport dialogsReducer from \"./dialogs_reducer\";\nimport sidebarReducer from \"./sidebar_reducer\";\nimport usersReducer from \"./users_reducer\";\nimport authReducer from \"./auth_reducer\";\nimport thunkMiddleware from \"redux-thunk\"\nimport {reducer as formReducer} from 'redux-form'\nimport appReducer from \"./app_reducer\";\n\nlet reducers = combineReducers({\n        ProfilePage: profileReducer,\n        DialogsPage: dialogsReducer,\n        Sidebar: sidebarReducer,\n        UsersPage: usersReducer,\n        auth: authReducer,\n        app: appReducer,\n        form: formReducer,\n\n\n    })\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(\n    applyMiddleware(thunkMiddleware)\n));\n\n\nexport default store;","import React from \"react\";\nimport s from \"./Navbar.module.css\"\nimport {NavLink} from \"react-router-dom\";\n\n\n\nconst Navbar = (props) => {\n\n    return <nav className={s.nav}>\n        <div className={s.item}>\n            <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\n        </div>\n        <div className={s.item}>\n            <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\n        </div>\n        <div className={s.item}>\n            <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\n        </div>\n        <div className={s.item}>\n            <a>News</a>\n        </div>\n        <div className={s.item}>\n            <a>Music</a>\n        </div>\n        <div className={s.item}>\n            <a>Settings</a>\n        </div >\n\n\n\n    </nav>\n}\n\nexport default Navbar","import React, {useState} from \"react\";\nimport s from \"../../common/Paginator/Paginator.module.css\";\n\n\nlet Paginator = (props) => {\n    let portionSize = 10\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n\n    let portionCount = Math.ceil(pagesCount/portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber-1)*portionSize+1;\n    let rightPortionPageNumber = portionNumber*portionSize;\n\n    let dis = portionNumber <= 1\n\n    return (\n        <div className={s.numPage}>\n            {<button onClick={() => {setPortionNumber(portionNumber - 1)}} disabled={dis} >PREV</button>}\n            {pages\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n                .map((p) => {\n                    return <div className={props.currentPage === p ? s.selectedborderdiv : s.borderdiv}>\n                        <span className={props.currentPage === p ? s.selectedPage : s.nonselectedpage} onClick={(e) => {props.onPageChanged(p)}}>{p}</span>\n                    </div>\n\n            })}\n            {portionCount > portionNumber && <button onClick={() => {setPortionNumber(portionNumber + 1)}}>NEXT</button>}\n        </div>\n    )\n}\n\nexport default Paginator","import React from \"react\";\nimport s from \"./Users.module.css\";\nimport userPhotos from \"../../assets/images/ava.jpg\";\nimport {NavLink} from \"react-router-dom\";\n\nlet User = ({user, followingInProgress, unfollow, follow}) => {\n    return <div>\n                    <div className={s.flex_wrapper}>\n                        <div className={s.avafoll}>\n                            <NavLink to={'/profile/' + user.id} >\n                                <img alt='ava' className={s.ava}\n                                     src={user.photos.small != null ? user.photos.small : userPhotos}/>\n                            </NavLink>\n                            <br/>\n                            {user.followed ?\n                                <button className={s.btn} disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\n                                    unfollow(user.id)\n                                }}>Unfollow</button>\n                                : <button className={s.btn} disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\n                                    follow(user.id)\n                                }}>Follow</button>}\n                        </div>\n\n                        <div className={s.description}>\n                            <div><span className={s.name}>{user.name}</span>\n                                <p className={s.status}>{user.status}</p></div>\n                            <span className={s.location}> {\"user.location.country\"}<br/>{\"user.location.city\"}</span>\n                        </div>\n                    </div>\n                </div>\n}\n\nexport default User","import React from \"react\";\nimport s from \"./Users.module.css\";\nimport Paginator from \"../../common/Paginator/Paginator\";\nimport User from \"./User\";\n\nlet Users = ({totalUsersCount, pageSize, currentPage, onPageChanged, users, followingInProgress, unfollow, follow, ...props}) => {\n    return <div>\n        <Paginator totalUsersCount={totalUsersCount}\n                   pageSize={pageSize}\n                   currentPage={currentPage}\n                   onPageChanged={onPageChanged}   />\n\n        <div className={s.block}>\n            <h2>Users</h2>\n            {users.map(u => <User user={u} followingInProgress={followingInProgress} unfollow={unfollow} follow={follow} key={u.id}/> )}\n        </div>\n    </div>\n}\n\nexport default Users","import {createSelector} from \"reselect\";\n\nconst usersGetStupid = (state) => {\n    return state.UsersPage.users\n}\n\nexport const usersGet = createSelector( usersGetStupid, (users) =>  {\n    return users;\n})\n\nexport const pageSizeGet = (state) => {\n    return state.UsersPage.pageSize\n}\n\nexport const totalUsersCountGet = (state) => {\n    return state.UsersPage.totalUsersCount\n}\n\nexport const currentPageGet = (state) => {\n    return state.UsersPage.currentPage\n}\n\nexport const isFetchingGet = (state) => {\n    return state.UsersPage.isFetching\n}\n\nexport const followingInProgressGet = (state) => {\n    return state.UsersPage.followingInProgress\n}\n\nexport const toggleFollowingInProgressGet = (state) => {\n    return state.UsersPage.toggleFollowingInProgress\n}","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {\n    follow, getUsers,\n    setCurrentPage,\n    toggleFollowingInProgress,\n    unfollow\n} from \"../../redux/users_reducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../../common/prelooader/Preloader\";\nimport {\n    currentPageGet,\n    followingInProgressGet,\n    isFetchingGet,\n    pageSizeGet, toggleFollowingInProgressGet,\n    totalUsersCountGet, usersGet,\n\n} from \"../../redux/users_selectors\";\n\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props\n        this.props.getUsers(currentPage, pageSize)\n\n    }\n\n    onPageChanged = (pageNumber) => {\n        const {pageSize} = this.props\n        this.props.getUsers(pageNumber, pageSize)\n        this.props.setCurrentPage(pageNumber)\n\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n                   followingInProgress={this.props.followingInProgress}/>\n\n        </>\n    }\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n        users: usersGet(state),\n        pageSize: pageSizeGet(state),\n        totalUsersCount: totalUsersCountGet(state),\n        currentPage: currentPageGet(state),\n        isFetching: isFetchingGet(state),\n        followingInProgress: followingInProgressGet(state),\n        toggleFollowingInProgress: toggleFollowingInProgressGet(state),\n    }\n}\n\nexport default connect(mapStateToProps, {\n    follow,\n    unfollow,\n    setCurrentPage,\n    toggleFollowingInProgress,\n    getUsers,\n})\n(UsersContainer)","import React from \"react\";\nimport s from \"./Login.module.css\"\nimport {Field, reduxForm} from \"redux-form\";\nimport {createField, Input} from \"../../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\nimport {login} from \"../../redux/auth_reducer\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\n\n\n\n\nconst maxLength = maxLengthCreator(30)\n\nconst LoginForm = ({handleSubmit, error}) => {\n\n    return (\n        <div className={s.wrapper}>\n            <h1>LOGIN</h1>\n            <form className={s.mini_wrapper} onSubmit={handleSubmit}>\n                {createField(\"Login\", s.inptxt, \"email\", \"email\", Input, [required, maxLength])}\n                {createField(\"Password\", s.inptxt, \"password\", \"password\", Input, [required, maxLength])}\n                <div className={s.diver}>\n                    <Field className={s.checkbox} type=\"checkbox\"  name=\"rememberMe\"\n                           component=\"input\" />\n                    <label htmlFor=\"remember\"> Remember Me</label>\n                </div>\n                { error && <div className={s.err}>{error}</div>}\n                <div>\n                    <button className={s.btn} type={\"submit\"}><span className={s.log}>Login</span></button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nconst LoginReduxForm = reduxForm({\n    form: 'login'\n})(LoginForm)\n\nconst Login = (props) => {\n\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe)\n    }\n\n    if (props.isAuth){\n        return <Redirect to={'/profile'}/>\n    }\n\n    return (\n        <div>\n\n            <div className={s.body}>\n                <LoginReduxForm onSubmit={onSubmit}/>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n})\n\n\nexport default connect(mapStateToProps, {login})(Login)","import React from \"react\";\nimport s  from \"./Header.module.css\"\nimport {NavLink} from \"react-router-dom\";\n\nconst Header = (props) => {\n\n    return <header className={ s.header }>\n        <img className={s.logo}  src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/VK.com-logo.svg/1024px-VK.com-logo.svg.png\"/>\n        <div className={s.loginBlock}>\n            <p className={s.login}>{props.isAuth ?\n                <div className={s.wrapper}>\n                    <span className={s.quit} onClick={props.logout}>QUIT</span>\n                    {props.login}\n                </div>\n                : <NavLink to={'/login'}>Login</NavLink> }</p>\n        </div>\n\n    </header>\n}\n\n\nexport default Header","import React from \"react\";\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/auth_reducer\";\n\nclass HeaderContainer extends React.Component{\n\n    render() {\n        return <Header {...this.props}/>\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n})\n\n\n\nexport default connect(mapStateToProps,{\n    logout\n})(HeaderContainer)","import React, {Component, lazy, Suspense} from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport Login from \"./components/Login/Login\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {connect, Provider} from \"react-redux\";\nimport {HashRouter, withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app_reducer\";\nimport Preloader from \"./common/prelooader/Preloader\";\nimport store from \"./redux/redux_store\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\n\n//const Login = lazy(() => import('./components/Login/Login'));\nconst ProfileContainer = lazy(() => import('./components/Profile/ProfileContainer'));\nconst DialogsContainer = lazy(() => import('./components/Dialogs/DialogsContainer'));\n\n\n\n\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n\n    render() {\n\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n\n            <div className=\"app-wrapper\">\n                <div className=\"header\">\n                    <HeaderContainer/>\n                </div>\n                <div className=\"wrapper_lite\">\n                    <div className=\"navigation\">\n                        <Navbar/>\n                    </div>\n                    <div className=\"app-wrapper-content\">\n                        <Suspense fallback={<Preloader />}>\n                            <Route path=\"/profile/:userId?\" render={() =>\n                                <ProfileContainer store={this.props.store}/>}/>\n                            <Route path=\"/dialogs\" render={() =>\n                                <DialogsContainer store={this.props.store}/>}/>\n                            <Route path=\"/users\" render={() => <UsersContainer/>}/>\n                            <Route path=\"/login\" render={() => <Login/>}/>\n                        </Suspense>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer =  compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp})\n)(App)\n\n\nlet SamuraiJSApp = (props) => {\n    return <HashRouter basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </HashRouter>\n}\n\nexport default SamuraiJSApp","import React from 'react';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux_store\";\nimport ReactDOM from \"react-dom\";\nimport SamuraiJSApp from \"./App\";\n//import 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\n\nwindow.store = store\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"wrapper\":\"Header_wrapper__4Axjt\",\"logo\":\"Header_logo__3_SJs\",\"loginBlock\":\"Header_loginBlock__6mma5\",\"login\":\"Header_login__3V3Qa\",\"quit\":\"Header_quit__e_kBe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"numPage\":\"Paginator_numPage__1M1iQ\",\"nonselectedpage\":\"Paginator_nonselectedpage__2Ugo0\",\"selectedPage\":\"Paginator_selectedPage__33A6a\",\"borderdiv\":\"Paginator_borderdiv__3ROPu\",\"selectedborderdiv\":\"Paginator_selectedborderdiv__JbxUa\"};","import Spinner from \"../../assets/images/Spinner.svg\";\nimport React from \"react\";\nimport s from \"./Preloader.module.css\"\n\nlet Preloader = (props) => {\n    return <div>\n        <img src={Spinner} className={s.preloader}/>\n    </div>\n}\n\nexport default Preloader","import React from \"react\";\nimport s from \"./FormsControls.module.css\";\nimport {Field} from \"redux-form\";\n\n\nconst FormControl = ({children, meta: {touched, error},  }) => {\n    const hasError = touched && error\n    return (\n        <div>\n            {children}\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n}\n\n\nexport const Textarea = (props) => {\n    const hasError = props.meta.touched && props.meta.error\n    return (\n        <FormControl {...props}><textarea className={hasError && s.err}  {...props.input}/></FormControl>\n    )\n}\n\nexport const Input = (props) => {\n    const hasError = props.meta.touched && props.meta.error\n    return (\n        <FormControl {...props}><input placeholder={props.placeholder}\n                                       className={hasError ? s.err : \"\" + props.className + \" \"}\n                                       type={props.type} {...props.input}/></FormControl>\n    )\n}\n\nexport const createField = (placeholder, className, type, name, component, validators) => {\n    return (\n        <div>\n            <Field component={component} className={className} type={type} name={name} placeholder={placeholder}\n                   validate={validators}/>\n        </div>\n    )\n}","export const required = (value) => {\n    if (value)\n        return undefined;\n\n    return \"Field is required\"\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength)\n        return `Max length is ${maxLength} symbols`;\n\n    return undefined\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"err\":\"FormsControls_err__15a7J\"};","import {profileAPI} from \"../api/api\";\n\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_USERS_STATUS = 'SET_USERS_STATUS';\nconst DELETE_POST = 'DELETE_POST';\n\nlet initialState = {\n    posts: [\n        {id: 1, message: 'What is your name?', likesCount: 12},\n        {id: 2, message: 'My name is Andrew', likesCount: 24},\n        {id: 3, message: 'Hi', likesCount: 15},\n        {id: 4, message: 'Hi', likesCount: 2},\n        {id: 5, message: 'My friend', likesCount: 6},\n        {id: 6, message: 'Yes', likesCount: 19},\n    ],\n    profile: null,\n    status: \"\",\n}\n\nconst profileReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case ADD_POST: {\n            let newPostText = action.newPostText\n            return {\n                ...state,\n                posts: [{id: 9, message: newPostText, likesCount: 0}, ...state.posts],\n            }\n        }\n        case SET_USER_PROFILE: {\n            return {\n                ...state,\n                profile: action.profile\n            }\n        }\n        case SET_USERS_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        case DELETE_POST: {\n            return {\n                ...state,\n                posts: state.posts.filter(p => p.id !== action.postId),\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\nexport const setUsersProfile = (profile) => ({type: SET_USER_PROFILE, profile})\nexport const setUsersStatus = (status) => ({type: SET_USERS_STATUS, status})\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n    let data = await profileAPI.getUserProfile(userId)\n    dispatch(setUsersProfile(data))\n}\n\nexport const getUserStatus = (userId) => async (dispatch) => {\n    let data = await profileAPI.getUserStatus(userId)\n    dispatch(setUsersStatus(data))\n}\nexport const updateUserStatus = (status) => async (dispatch) => {\n    let data = await profileAPI.updateUserStatus(status)\n    if (data.resultCode === 0) {\n        dispatch(setUsersStatus(status))\n    }\n}\n\n\nexport default profileReducer;"],"sourceRoot":""}